[user]
  email = Stuff_Git_NaoResposta@outlook.com
  name  = DevilPepper
[commit]
  gpgsign = true
[include]
  path = ~/.config/git/work.gitconfig
  path = ~/.config/git/secret.gitconfig
[alias]
  co          = checkout
  cp          = clone --single-branch
  get         = ! git fetch && git rebase FETCH_HEAD
  cwd         = ! pwd
  root        = ! git rev-parse --absolute-git-dir | awk -F'/.git' '{ print $1 }'
  adog        = log --all --decorate --oneline --graph
  is-repo     = ! git rev-parse --is-inside-work-tree > /dev/null 2>&1

  about       = ! git description $(git branch | grep \\* | cut -d ' ' -f2)
  alias       = ! git config --get-regexp alias | sed 's/alias\\./git /'
  amend       = ! git commit --amend --no-edit
  over-here   = ! git fetch origin $(git rev-parse --abbrev-ref HEAD) && git reset --hard FETCH_HEAD
  rmignored   = ! git ls-files -i --exclude-from=.gitignore | xargs --no-run-if-empty git rm --cached

  conflux     = ! git_diff_upstream_local | xargs --no-run-if-empty git delete
  trim        = ! git_diff_remote_local | xargs -r git branch -D
  lfx         = ! git lfs migrate import --no-rewrite --yes $(git diff --name-only) && git rebase -i

  delete      = "!git_delete() { git branch -D $* && git push origin --delete $*; }; git_delete"
  description = "!git_describe() { git config branch.$1.description; }; git_describe"
  new         = "!git_new() { git checkout -b $1 && git push -u origin $1 || git checkout -; }; git_new"
  sync        = "!git_sync() { git checkout $1 && git pull upstream $1 && git push --force; git checkout -; }; git_sync"

  fzb         = "!git_fzb() { git branch | sed 's/[ \\t\\*]*//' | fzf --preview=\"git_fzb_preview ${1-origin/HEAD} {}\"; }; git_fzb"
  fzc         = "!git_fzc() { git checkout $(git fzb $*); }; git_fzc"
  fzd         = "!git_fzd() { git diff --name-only $* | fzf --preview=\"git diff --color=always $* -- {}\"; }; git_fzd"
  fzs         = "!git_fzs() { git stage $(git ls-files -dmo | fzf --preview=\"git_fzs_preview {}\"); }; git_fzs"

  bb          = "!git_bb() { repo=$1; shift; git clone git@bitbucket.org:$repo.git $*; }; git_bb"
  gh          = "!git_gh() { repo=$1; shift; git clone git@github.com:$repo.git $*; }; git_gh"
  gl          = "!git_gl() { repo=$1; shift; git clone git@gitlab.com:$repo.git $*; }; git_gl"
[core]
  editor = vim
  excludesfile = ~/.config/git/ignore
  filemode = true
  hooksPath = .githooks
[fetch]
  prune = true
[push]
  default = simple
[pull]
  ff = only
  rebase = true
[init]
  defaultBranch = main
[diff]
  colorMoved = dimmed-zebra
  colorMovedWS = ignore-all-space
[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
[advice]
  addEmptyPathspec = false
