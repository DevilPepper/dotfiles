[user]
	email = Stuff_Git_NaoResposta@outlook.com
	name  = DevilPepper
[commit]
 	gpgsign = true
[include]
	path = ~/work.gitconfig
	path = ~/secret.gitconfig
[alias]
	co          = checkout
	cp          = clone --single-branch
	get         = ! git fetch && git rebase FETCH_HEAD
	root        = ! pwd
	lg          = log --oneline --decorate --graph --all

	about       = ! git description $(git branch | grep \\* | cut -d ' ' -f2)
	alias       = ! git config --get-regexp alias | sed 's/alias\\./git /'
	amend       = ! git commit --amend --no-edit
	over-here   = ! git fetch origin $(git rev-parse --abbrev-ref HEAD) && git reset --hard FETCH_HEAD
	rmignored   = ! git ls-files -i --exclude-from=.gitignore | xargs --no-run-if-empty git rm --cached

	conflux     = ! git_diff_upstream_local | xargs --no-run-if-empty git delete
	trim        = ! git_diff_remote_local | xargs -r git branch -D
	lfx         = ! git lfs migrate import --no-rewrite --yes $(git diff --name-only) && git rebase -i

	delete      = "!git_delete() { git branch -D $* && git push origin --delete $*; }; git_delete"
	description = "!git_describe() { git config branch.$1.description; }; git_describe"
	new         = "!git_new() { git checkout -b $1 && git push -u origin $1 || git checkout -; }; git_new"
	sync        = "!git_sync() { git checkout $1 && git pull upstream $1 && git push --force; git checkout -; }; git_sync"

	bb          = "!git_bb() { repo=$1; shift; git clone git@bitbucket.org:$repo.git $*; }; git_bb"
	gh          = "!git_gh() { repo=$1; shift; git clone git@github.com:$repo.git $*; }; git_gh"
	gl          = "!git_gl() { repo=$1; shift; git clone git@gitlab.com:$repo.git $*; }; git_gl"
[core]
	editor = vim
  excludesfile = ~/.gitignore
	filemode = true
  hooksPath = .githooks
[fetch]
	prune = true
[push]
	default = simple
[pull]
  ff = only
  rebase = true
[init]
	defaultBranch = main
[diff]
	colorMoved = dimmed-zebra
	colorMovedWS = ignore-all-space
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
